import java.util.*;

class Student implements Comparable<Student> {
    int number , grade;
    
    public Student(int number , int grade){
        this.number = number;
        this.grade = grade;
    }
    public String toString(){
        return number+"."+grade;
    }
    @Override
    public int compareTo(Student st){
        return this.grade-st.grade;
    }
}


public class Main{
    public static void main(String[] argv){
        Scanner sc = new Scanner(System.in);
        List<Student> stu = new ArrayList<Student>();
        int number=1, grade, orderBy;   
        
        //輸入資料 -1跳出
        while(true){
            grade = sc.nextInt();
            if(grade == -1)
                break;
            stu.add(new Student(number++, grade));
        }
        //輸入排序方法
        orderBy = sc.nextInt();
        
        //由小到大
        if(orderBy == 1){
            Collections.sort(stu);
            for(Student s : stu)
                System.out.println(s);
        }
        //由大到小
        else{
            Collections.sort(stu);
            Collections.reverse(stu);
            //處理相同成績的狀況→把號碼由小到大print
            Deque<Integer> stack = new ArrayDeque<>();
            for(int i = 0; i < stu.size(); i++){
                //tmp_i 為 相同成績的最後一個index , move為此輪for i移動格數
                int  nextIndex = i + 1, // 指向目前位置的下一個元素
                     tmpGrade = stu.get(i).grade; //暫存當前位置成績
                /*  由於陣列 先sort 再 reverse 後  相同成績號碼小的會再後面，
                    但答案要相同成績號碼小先出 →FILO 剛好練習一下stack
                    注意 stack 要用 Deque 類別 
                */
                while(nextIndex < stu.size() && stu.get(nextIndex).grade == tmpGrade){
                      stack.addLast(stu.get(i).number); // 當前和下一個為一組比較成績 若相同存入前者
                      nextIndex ++; // 再看下下一個有沒有相同成績
                      i++;
                }
                
                if(stack.isEmpty()){
                    System.out.println(stu.get(i));
                    // 注意 : 如果把 i++ 寫再for的條件中 那 成績相同的狀況 會多+1
                }
                else{
                    /*上面while迴圈 兩兩一組比較 最後一組不同時 前一個也要輸出
                       number  05/03/02/01/04
                       grade   40/10/10/10/02
                       number(03,02) (02,01) (01,04) 01再上一組比較過也是相同的 要記得歸類再同一個成績
                    */
                    System.out.println(stu.get(i));
                    while(!stack.isEmpty()){
                        System.out.printf("%d.%d\n", stack.peekLast(), stu.get(i).grade);
                        stack.removeLast();
                    }
                }
            }//end for
        }//end else
    }
}
