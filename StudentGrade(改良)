import java.util.*;

class Student implements Comparable<Student> {
    int number , grade;
    
    public Student(int number , int grade){
        this.number = number;
        this.grade = grade;
    }
    public String toString(){
        return number+"."+grade;
    }
    @Override
    public int compareTo(Student st){
        return this.grade-st.grade;
    }
}


public class Main{
    public static void main(String[] argv){
        Scanner sc = new Scanner(System.in);
        List<Student> stu = new ArrayList<Student>();
        int number=1, grade, orderBy;   
        
        //輸入資料 -1跳出
        while(true){
            grade = sc.nextInt();
            if(grade == -1)
                break;
            stu.add(new Student(number++, grade));
        }
        //輸入排序方法
        orderBy = sc.nextInt();
        
        //由小到大
        if(orderBy == 1){
            Collections.sort(stu);
            for(Student s : stu)
                System.out.println(s);
        }
        //由大到小
        else{
        /*  思考盲點: 
            以 number 01/02/03/04/05/06  OrderBy Desc為例
               grade  10/10/10/30/40/02
               
            之前思考太僵化，一直把sort當成前提，想說sort後number為 06/01/02/03/04/05 (ASC)
            若reverse後要在另外迴圈處理相同成績時 把號碼小的先印。
            但是如果(只寫number表示)
            先reverse →    06/05/04/03/02/01  穩定排序 相同大小 順序不變
            再sort    →    06/03/02/01/04/05 
            再reverse →    05/04/01/02/03/06  即可拿到答案!!
        */
            Collections.reverse(stu);
            Collections.sort(stu);
            Collections.reverse(stu);
            for(Student s: stu)
                System.out.println(s);
        }//end else
    }
}
